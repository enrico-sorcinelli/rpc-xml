RPC::XML - An implementation of XML-RPC

Version: 0.79

WHAT IS IT

The RPC::XML package is an implementation of XML-RPC. The module provides
classes for sample client and server implementations, a server designed as an
Apache location-handler, and a suite of data-manipulation classes that are
used by them.


USING RPC::XML

There are not any pre-packaged executables in this distribution (except for a
utility tool). Client usage will usually be along the lines of:

    use RPC::XML::Client;
    ...
    my $client = RPC::XML::Client->new(
        'http://www.oreillynet.com/meerkat/xml-rpc/server.php' );
    my $req = RPC::XML::request->new('meerkat.getChannelsBySubstring', 'perl');
    my $res = $client->send_request($req);
    # This returns an object of the RPC::XML::response class. This double-call
    # of value() first gets a RPC::XML::* data object from the response, then
    # the actual data from it:
    my $value = $res->value->value;

Running a simple server is not much more involved:

    use RPC::XML::Server;
    ...
    my $srv = RPC::XML::Server->new( host => 'localhost',
                                     port => 9000 );
    # You would then use $srv->add_method to add some remotely-callable code
    ...
    $srv->accept_loop; # Stays in an accept/connect loop


BUILDING/INSTALLING

This package is set up to configure and build like a typical Perl extension.
To build:

        perl Makefile.PL
        make && make test

If RPC::XML passes all tests, then:

        make install

You may need super-user access to install.


PROBLEMS/BUG REPORTS

Please send any reports of problems or bugs to rjray@blackperl.com


SEE ALSO

XML-RPC:          http://www.xmlrpc.com/spec
The Artistic 2.0: http://www.opensource.org/licenses/artistic-license-2.0.php
The LGPL 2.1:     http://www.opensource.org/licenses/lgpl-2.1.php


CHANGES

* t/40_server.t
* t/40_server_xmllibxml.t
* t/41_server_hang.t
* t/60_net_server.t
* t/70_compression_detect.t
* t/90_rt54183_sigpipe.t
* t/util.pl
Test clean-up/fixes to address CPAN test failures. Should
address problems with having IO::Socket::IP acting in place of
IO::Socket::INET and also address some issues with a dynloader
bug being triggered by t/70_compression_detect.t.

* t/00_load.t
* t/10_data.t
* t/11_base64_fh.t
* t/12_nil.t
* t/13_no_deep_recursion.t
* t/14_datetime_iso8601.t
* t/15_serialize.t
* t/20_xml_parser.t
* t/21_xml_libxml.t
* t/25_parser_negative.t
* t/29_parserfactory.t
* t/30_procedure.t
* t/35_namespaces.t
* t/40_server.t
* t/40_server_xmllibxml.t
* t/41_server_hang.t
* t/50_client.t
* t/51_client_with_host_header.t
* t/60_net_server.t
* t/90_rt50013_parser_bugs.t
* t/90_rt54183_sigpipe.t
* t/90_rt54494_blessed_refs.t
* t/90_rt58065_allow_nil.t
* t/90_rt58323_push_parser.t
* t/util.pl
Perl::Critic clean-up of test suites.

* lib/RPC/XML/Parser/XMLParser.pm
Fix to prevent a new sprintf-related warning in 5.21.

* README
* lib/Apache/RPC/status.code
Merge pull request #8 from jkg/docfixes (James Green). Replace
indirect object notation with direct.
